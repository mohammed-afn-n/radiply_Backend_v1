# Generated by Django 5.1.5 on 2025-03-26 15:37

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DataSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Worklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "study_name",
                    models.CharField(max_length=255, verbose_name="Study Name"),
                ),
                ("study_start_date", models.DateField(verbose_name="Study Start Date")),
                ("study_end_date", models.DateField(verbose_name="Study End Date")),
                ("modality", models.CharField(max_length=50)),
                ("status", models.CharField(max_length=50)),
                ("priority", models.CharField(max_length=50)),
                (
                    "imgpath",
                    models.CharField(max_length=255, verbose_name="Image Path"),
                ),
                (
                    "img_name",
                    models.CharField(max_length=255, verbose_name="Image Name"),
                ),
                (
                    "data_set_name",
                    models.CharField(max_length=255, verbose_name="Data Set Name"),
                ),
            ],
            options={
                "verbose_name": "Worklist",
                "verbose_name_plural": "Worklists",
            },
        ),
        migrations.CreateModel(
            name="Pathologies",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "atelectasis",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "cardiomegaly",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "consolidation",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "edema",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "effusion",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "emphysema",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "fibrosis",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "hernia",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "infiltration",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "mass",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "nodule",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "pleural_thickening",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "pneumonia",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "pneumothorax",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "enlarged_cardiomediastinum",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "fracture",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "lung_lesion",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "lung_opacity",
                    models.DecimalField(decimal_places=5, default=0.0, max_digits=15),
                ),
                (
                    "worklist",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pathology",
                        to="fetchimage.worklist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pathology",
                "verbose_name_plural": "Pathologies",
            },
        ),
        migrations.CreateModel(
            name="Heatmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "generated_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("original_img", models.BinaryField(blank=True, null=True)),
                ("pneumothorax", models.BinaryField(blank=True, null=True)),
                ("consolidation", models.BinaryField(blank=True, null=True)),
                (
                    "enlarged_cardiomediastinum",
                    models.BinaryField(blank=True, null=True),
                ),
                ("lung_lesion", models.BinaryField(blank=True, null=True)),
                ("pneumonia", models.BinaryField(blank=True, null=True)),
                ("infiltration", models.BinaryField(blank=True, null=True)),
                ("effusion", models.BinaryField(blank=True, null=True)),
                ("atelectasis", models.BinaryField(blank=True, null=True)),
                ("cardiomegaly", models.BinaryField(blank=True, null=True)),
                ("edema", models.BinaryField(blank=True, null=True)),
                ("lung_opacity", models.BinaryField(blank=True, null=True)),
                ("fracture", models.BinaryField(blank=True, null=True)),
                ("mass", models.BinaryField(blank=True, null=True)),
                ("nodule", models.BinaryField(blank=True, null=True)),
                ("emphysema", models.BinaryField(blank=True, null=True)),
                ("fibrosis", models.BinaryField(blank=True, null=True)),
                ("pleural_thickening", models.BinaryField(blank=True, null=True)),
                ("hernia", models.BinaryField(blank=True, null=True)),
                (
                    "worklist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="heatmaps",
                        to="fetchimage.worklist",
                    ),
                ),
            ],
        ),
    ]
